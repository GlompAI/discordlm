name: CI/CD - Build, Push, and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Pull latest changes
        run: git pull

      - name: Replace image tag in deployment yaml
        run: sed -i "s/{{IMAGE_TAG}}/${{ github.sha }}/g" k8s-deployment.yaml

      - name: Copy deployment file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "k8s-deployment.yaml,k8s-config.yaml"
          target: "/root/discordlm/"

      - name: Deploy to remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            k3s kubectl create secret docker-registry regcred \
              --docker-server=ghcr.io \
              --docker-username=${{ github.actor }} \
              --docker-password=${{ secrets.GITHUB_TOKEN }} \
              --dry-run=client -o yaml | k3s kubectl apply -f - --overwrite --force
            k3s kubectl delete secret discordlm-secrets --ignore-not-found
            k3s kubectl create secret generic discordlm-secrets \
              --from-literal=BOT_TOKEN=${{ secrets.BOT_TOKEN }} \
              --from-literal=GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
              --from-literal=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
              --from-literal=GEMINI_BASE_URL=${{ secrets.GEMINI_BASE_URL }} \
              --from-literal=OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }} \
              -o yaml | k3s kubectl apply -f - --overwrite
            k3s kubectl delete configmap discordlm-config --ignore-not-found
            k3s kubectl create configmap discordlm-config \
              --from-literal=ADMIN_OVERRIDE_ID=${{ vars.ADMIN_OVERRIDE_ID }} \
              --from-literal=USER_ID_LIST=${{ vars.USER_ID_LIST }} \
              --from-literal=LIMIT_USER_IDS=${{ vars.LIMIT_USER_IDS }} \
              --from-literal=GEMINI_TOKEN_LIMIT=${{ vars.GEMINI_TOKEN_LIMIT }} \
              --from-literal=OPENAI_TOKEN_LIMIT=${{ vars.OPENAI_TOKEN_LIMIT }} \
              --from-literal=RATE_LIMIT_PER_MINUTE=${{ vars.RATE_LIMIT_PER_MINUTE }} \
              --from-literal=ENABLE_AVATAR_SERVER=${{ vars.ENABLE_AVATAR_SERVER }} \
              --from-literal=PUBLIC_AVATAR_BASE_URL=${{ vars.PUBLIC_AVATAR_BASE_URL }} \
              --from-literal=DEBUG=${{ vars.DEBUG }} \
              --from-literal=MAX_HISTORY_MESSAGES=${{ vars.MAX_HISTORY_MESSAGES }} \
              --from-literal=OPENAI_BASE_URL=${{ vars.OPENAI_BASE_URL }} \
              --from-literal=AVATAR_PORT=${{ vars.AVATAR_PORT }} \
              -o yaml | k3s kubectl apply -f - --overwrite
            sleep 5
            k3s kubectl delete deployment discordlm-deployment
            k3s kubectl apply -f /root/discordlm/k8s-deployment.yaml
            k3s kubectl rollout status deployment/discordlm-deployment